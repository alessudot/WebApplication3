@page
@inject IHttpContextAccessor contxt;
@model WebApplication3.Pages.ResetPasswordModel
@{
}
@if (HttpContext.Request.Query["email"].Count != 0)
{
    <div class="container mt-5">

        <div class="row justify-content-center align-items-center">

            <div class="col-sm-12 col-md-12 col-lg-4">
                <h1 class="mb-3">Reset Password </h1>
                <form method="post">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @TempData["ErrorMessage"]
                        </div>
                    }

                    <input type="hidden" name="EmailAccount" value="@HttpContext.Request.Query["email"]" />

                    <input type="hidden" name="ResetToken" value="@HttpContext.Request.Query["token"]" />

                    <div class="mb-3">
                        <label class="form-label" asp-for="RPModel.Password">Password</label>
                        <input type="password" id="password" asp-for="RPModel.Password" class="form-control" onkeyup="javascript:PasswordChecker()" />
                        <span asp-validation-for="RPModel.Password" class="text-danger"></span>
                    </div>
                    <p id="PasswordText"></p>

                    <div class="mb-3">
                        <label class="form-label" asp-for="RPModel.ConfirmPassword">Confirm Password</label>
                        <input type="password" id="confirmPassword" asp-for="RPModel.ConfirmPassword" class="form-control" onkeyup="ConfirmPasswordChecker()" />
                        <span asp-validation-for="RPModel.ConfirmPassword" class="text-danger"></span>
                    </div>
                    <p id="ConfirmPasswordText"></p>

                    <div class="mb-3">
                        <button type="submit" class="btn btn-primary">Reset</button>
                    </div>
                </form>           
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function PasswordChecker() {
        var password = document.getElementById("password").value;
        var passwordText = document.getElementById("PasswordText");

        if (password.length < 12) {
            passwordText.innerText = "Password must consist of at least 12 characters";
            passwordText.style.color = "Red"
        }
        else if (!/[\d]/.test(password)) {
            passwordText.innerText = "Password must consist of at one number";
            passwordText.style.color = "Red"
        }
        else if (!/[a-z]/.test(password)) {
            passwordText.innerText = "Password must consist of at least one lowercase letter";
            passwordText.style.color = "Red"
        }
        else if (!/[A-Z]/.test(password)) {
            passwordText.innerText = "Password must consist of at least one uppercase letter";
            passwordText.style.color = "Red"
        }
        else if (!/[\W]/.test(password)) {
            passwordText.innerText = "Password must consist of at least one special character";
            passwordText.style.color = "Red"
        }
        else {
            passwordText.innerText = ""
        }

    }

    function ConfirmPasswordChecker() {
        var password = document.getElementById("password").value;
        var confirmPassword = document.getElementById("confirmPassword").value;
        var confirmPasswordText = document.getElementById("ConfirmPasswordText");

        if (confirmPassword != password) {
            confirmPasswordText.innerText = "Passwords do not match"
            confirmPasswordText.style.color = "Red"
        }
        else {
            confirmPasswordText.innerText = ""
        }
    }
</script>